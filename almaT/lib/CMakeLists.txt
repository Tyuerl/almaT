project(${PROJECT_PREFIX}_cmake_helper)

if(UNIX AND NOT APPLE)
    set(TARGET_BUILD_PLATFORM "linux")
endif()
if(WIN32)
    set(TARGET_BUILD_PLATFORM "windows")
endif()
set(TARGET_BUILD_PLATFORM "${TARGET_BUILD_PLATFORM}" CACHE INTERNAL "")

if(${TARGET_BUILD_PLATFORM} STREQUAL "linux")
    set(TARGET_SCRIPT_EXT "sh")
endif()
if(${TARGET_BUILD_PLATFORM} STREQUAL "windows")
    set(TARGET_SCRIPT_EXT "bat")
endif()
set(TARGET_SCRIPT_EXT "${TARGET_SCRIPT_EXT}" CACHE INTERNAL "")

string(TOLOWER ${CMAKE_BUILD_TYPE} TARGET_BUILD_TYPE)
message("target build type - ${TARGET_BUILD_TYPE}")

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(TARGET_PLATFORM_ARCHITECTURE "x64")
else()
    set(TARGET_PLATFORM_ARCHITECTURE "x86")
endif()
set(TARGET_PLATFORM_ARCHITECTURE "${TARGET_PLATFORM_ARCHITECTURE}" CACHE INTERNAL "")

set(TARGET_SCRIPT_EXT "${TARGET_SCRIPT_EXT}" CACHE INTERNAL "")
set(LIB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/lib" CACHE INTERNAL "")
set(CPP_LIB_DIR "${LIB_DIR}/cpp/${TARGET_BUILD_PLATFORM}/${TARGET_PLATFORM_ARCHITECTURE}/${TARGET_BUILD_TYPE}" CACHE INTERNAL "")
set(SCRIPT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/script/${TARGET_BUILD_PLATFORM}" CACHE INTERNAL "")

#add all cpp library to CMAKE_PREFIX_PATH
file(GLOB children RELATIVE ${CPP_LIB_DIR} ${CPP_LIB_DIR}/*)
set(LIBRARY_LIST "" CACHE INTERNAL "")
foreach(child ${children})
    if(IS_DIRECTORY ${CPP_LIB_DIR}/${child})
        list(APPEND LIBRARY_LIST ${child})
    endif()
endforeach()

foreach(library ${LIBRARY_LIST})
    list(APPEND CMAKE_PREFIX_PATH ${CPP_LIB_DIR}/${library})
endforeach()
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH}" CACHE INTERNAL "")

#set(CMAKE_PREFIX_PATH "${CPP_LIB_DIR}/qt/lib/cmake/Qt5" CACHE INTERNAL "")
